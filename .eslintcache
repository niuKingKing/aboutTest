[{"C:\\AppProject\\reactApp\\test_app\\src\\index.js":"1","C:\\AppProject\\reactApp\\test_app\\src\\pages\\index.js":"2","C:\\AppProject\\reactApp\\test_app\\src\\pages\\Entrance\\index.js":"3","C:\\AppProject\\reactApp\\test_app\\src\\pages\\Main\\index.js":"4"},{"size":412,"mtime":1609345346403,"results":"5","hashOfConfig":"6"},{"size":758,"mtime":1609481706059,"results":"7","hashOfConfig":"6"},{"size":692,"mtime":1609481659461,"results":"8","hashOfConfig":"6"},{"size":5816,"mtime":1609484167465,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"aeon4h",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\AppProject\\reactApp\\test_app\\src\\index.js",[],["21","22"],"C:\\AppProject\\reactApp\\test_app\\src\\pages\\index.js",[],"C:\\AppProject\\reactApp\\test_app\\src\\pages\\Entrance\\index.js",["23"],"import { Component, Fragment } from 'react';\nimport '../index.css';\nimport loginPic from '../../asset/icons/Entry.png'\n\nclass Entrance extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        let { handleLoginState } = this.props;\n        return (\n            <Fragment>\n                <div className=\"entrance_sup_container\">\n                    <img\n                        src={loginPic}\n                        alt=\"登录按钮\"\n                        className=\"entrance_sup_container_img\"\n                        onClick={handleLoginState}\n                    />\n                </div>\n            </Fragment>\n        )\n    }\n}\n\n\nexport default Entrance","C:\\AppProject\\reactApp\\test_app\\src\\pages\\Main\\index.js",["24","25","26","27","28","29","30","31","32","33","34","35"],"import { Component, Fragment } from 'react';\nimport leftArrow from '../../asset/icons/leftArrow.png';\nimport rightArrow from '../../asset/icons/rightArrow.png';\nimport cloudy from '../../asset/icons/cloudy.png';\nimport rain from '../../asset/icons/rain.png';\nimport snow from '../../asset/icons/snow.png';\nimport sunny from '../../asset/icons/sunny.png';\nimport thunderStorm from '../../asset/icons/thunderStorm.png';\nimport refresh from '../../asset/icons/refresh.png';\nimport $ from 'jquery'\nimport '../index.css';\n\n\nfunction Weather(props) {\n    let { targetData } = props;\n    return (\n        <Fragment>\n            <div>\n                {targetData.weather == 0 && <img className=\"main_body_pic\" src={cloudy} height={150} width={200} />}\n                {targetData.weather == 1 && <img className=\"main_body_pic\" src={rain} height={200} width={200} />}\n                {targetData.weather == 2 && <img className=\"main_body_pic\" src={snow} height={200} width={200} />}\n            </div>\n        </Fragment>\n\n    )\n}\n\n\n\n\nclass Entrance extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: 1,\n            targetData: {},\n            getDataState: false\n        }\n    }\n    componentDidMount() {\n        // we will fetch/get data in this method.\n        let data = [\n            { id: 1, name: \"Sydney\", weather: 0, currentTemperature: 10, maxTemperature: 16, minTemperature: 5 },\n            { id: 2, name: \"Melbourne\", weather: 1, currentTemperature: 10, maxTemperature: 16, minTemperature: 5 },\n            { id: 3, name: \"Brisbane\", weather: 2, currentTemperature: 10, maxTemperature: 16, minTemperature: 5 },\n        ];\n\n        $.ajax({\n            type: \"GET\",\n            url: \"http://localhost:8000/api/weather\",\n            // data: \"name=John&location=Boston\",\n            success: function(msg){\n              alert( \"Data Saved: \" + msg );\n            }\n         });\n        this.setState({\n            data,\n            targetData: data[0]\n        });\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let { data, id } = this.state;\n        if (id !== prevState.id) {\n            let [targetData] = data.filter(item => item.id === id);\n            this.setState({\n                targetData\n            })\n        }\n    }\n\n    handleWeather = () => {\n        let { id } = this.state;\n        this.setState({\n            id,\n            getDataState: true\n        })\n    }\n\n    handleWeatherPic = (data) => {\n        console.log(data)\n\n    }\n\n    handleReduce = () => {\n        let { id } = this.state;\n        if (id === 1) {\n            this.setState((state) => ({\n                id: state.data.length\n            }))\n        } else {\n            this.setState({\n                id: this.state.id - 1,\n                getDataState:false\n            })\n        }\n    }\n\n    handleAdd = () => {\n        let { id, data } = this.state;\n        if (id === data.length) {\n            this.setState({\n                id: data[0].id,\n                getDataState:false\n            })\n        } else {\n            this.setState({\n                id: this.state.id + 1,\n                getDataState:false\n            })\n        }\n    }\n\n    handleJudgeWeather = (data) => {\n        let weather;\n        switch (data) {\n            case 0:\n                weather = \"cloudy\";\n                break;\n            case 1:\n                weather = \"rain\";\n                break;\n            case 2:\n                weather = \"snow\";\n                break;\n        }\n        return weather;\n    }\n\n    render() {\n        let { id, targetData } = this.state;\n        console.log(id)\n        return (\n            <Fragment>\n                <div className=\"container\">\n                    <div className=\"main_container\">\n                        <div className=\"main_left\">\n                            <img src={leftArrow} height={50} width={50} onClick={this.handleReduce} />\n                        </div>\n                        <div className=\"main_middle\">\n                            <p className=\"main_title\">{targetData.name}</p>\n                            <div className=\"main_body\">\n                                {\n                                    this.state.getDataState ?\n                                        <Weather targetData={targetData} handleWeatherPic={this.handleWeatherPic} />\n                                        :\n                                        <img className=\"main_body_pic\" src={refresh} height={200} width={200} onClick={this.handleWeather} />\n                                }\n                            </div>\n                            {\n                                this.state.getDataState ?\n                                    <div className=\"main_temperature\">\n                                        <p>{targetData.currentTemperature}</p>\n                                        <p>\n                                            <span>{targetData.minTemperature}</span>\n                                            <span>{targetData.maxTemperature}</span>\n                                        </p>\n                                        <div className=\"temperature_num\">\n                                            <p>{this.handleJudgeWeather(targetData.weather)}</p>\n                                        </div>\n                                    </div>\n\n                                    :\n                                    null\n                            }\n\n                        </div>\n                        <div className=\"main_right\">\n                            <img src={rightArrow} height={50} width={50} onClick={this.handleAdd} />\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\nexport default Entrance",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":6,"column":5,"nodeType":"42","messageId":"43","endLine":8,"endColumn":6},{"ruleId":"44","severity":1,"message":"45","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":8,"column":8,"nodeType":"46","messageId":"47","endLine":8,"endColumn":20},{"ruleId":"49","severity":1,"message":"50","line":19,"column":37,"nodeType":"51","messageId":"52","endLine":19,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":19,"column":45,"nodeType":"55","endLine":19,"endColumn":116},{"ruleId":"49","severity":1,"message":"50","line":20,"column":37,"nodeType":"51","messageId":"52","endLine":20,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":20,"column":45,"nodeType":"55","endLine":20,"endColumn":114},{"ruleId":"49","severity":1,"message":"50","line":21,"column":37,"nodeType":"51","messageId":"52","endLine":21,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":21,"column":45,"nodeType":"55","endLine":21,"endColumn":114},{"ruleId":"56","severity":1,"message":"57","line":116,"column":9,"nodeType":"58","messageId":"59","endLine":126,"endColumn":10},{"ruleId":"53","severity":1,"message":"54","line":138,"column":29,"nodeType":"55","endLine":138,"endColumn":103},{"ruleId":"53","severity":1,"message":"54","line":147,"column":41,"nodeType":"55","endLine":147,"endColumn":142},{"ruleId":"53","severity":1,"message":"54","line":169,"column":29,"nodeType":"55","endLine":169,"endColumn":101},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'sunny' is defined but never used.","Identifier","unusedVar","'thunderStorm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]